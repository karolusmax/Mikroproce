
lab09.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000071a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000050  00800060  0000071a  000007ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000009  008000b0  008000b0  000007fe  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  000007fe  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 00000132  00000000  00000000  0000081e  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000574  00000000  00000000  00000950  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000001d9  00000000  00000000  00000ec4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000007d9  00000000  00000000  0000109d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000f0  00000000  00000000  00001878  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000019b  00000000  00000000  00001968  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000001a8  00000000  00000000  00001b03  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000048  00000000  00000000  00001cab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 51 03 	jmp	0x6a2	; 0x6a2 <__vector_10>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	ea e1       	ldi	r30, 0x1A	; 26
  68:	f7 e0       	ldi	r31, 0x07	; 7
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 3b       	cpi	r26, 0xB0	; 176
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 eb       	ldi	r26, 0xB0	; 176
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a9 3b       	cpi	r26, 0xB9	; 185
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 75 03 	call	0x6ea	; 0x6ea <main>
  8a:	0c 94 8b 03 	jmp	0x716	; 0x716 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <wypisz>:
char menuProgram=1;
char menuPom=0;
char progTrwa=0;
char wykryjPrzycisk=0;
void wypisz(uint8_t b,int command_mode)
{
  92:	28 2f       	mov	r18, r24
	//uint8_t temp = LCD_PORT;
	if(command_mode){
  94:	67 2b       	or	r22, r23
  96:	11 f0       	breq	.+4      	; 0x9c <wypisz+0xa>
		LCD_PORT &= ~(_BV(LCD_RS)); //przestawia na lini RS wartosc na 0 po to by wyslac komende a nie dane
  98:	c1 98       	cbi	0x18, 1	; 24
  9a:	01 c0       	rjmp	.+2      	; 0x9e <wypisz+0xc>
	} else {
		LCD_PORT |= _BV(LCD_RS);//przestawia linie RS na wartosc 1 odpowiadajaca wprowadzaniu danych
  9c:	c1 9a       	sbi	0x18, 1	; 24
	}
    LCD_PORT |= _BV(LCD_EN);    //wlaczenie linii ENABLE
  9e:	c0 9a       	sbi	0x18, 0	; 24
    LCD_PORT = (b & 0xF0) | (LCD_PORT & 0x0F);  //wyslanie 4 starszych bitow
  a0:	88 b3       	in	r24, 0x18	; 24
  a2:	92 2f       	mov	r25, r18
  a4:	90 7f       	andi	r25, 0xF0	; 240
  a6:	8f 70       	andi	r24, 0x0F	; 15
  a8:	98 2b       	or	r25, r24
  aa:	98 bb       	out	0x18, r25	; 24
    LCD_PORT &= ~(_BV(LCD_EN)); //potwierdzenie wyslania danych poprzez opadniecie ENABLE
  ac:	c0 98       	cbi	0x18, 0	; 24
    asm volatile("nop");    //oczekiwanie jednego cyklu
  ae:	00 00       	nop
    LCD_PORT |= _BV(LCD_EN);
  b0:	c0 9a       	sbi	0x18, 0	; 24
    LCD_PORT = ((b & 0x0F) << 4) | (LCD_PORT & 0x0F);   //wyslanie 4 mlodszych bitow
  b2:	88 b3       	in	r24, 0x18	; 24
  b4:	22 95       	swap	r18
  b6:	20 7f       	andi	r18, 0xF0	; 240
  b8:	8f 70       	andi	r24, 0x0F	; 15
  ba:	82 2b       	or	r24, r18
  bc:	88 bb       	out	0x18, r24	; 24
    LCD_PORT &= ~(_BV(LCD_EN));
  be:	c0 98       	cbi	0x18, 0	; 24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
  c0:	88 e8       	ldi	r24, 0x88	; 136
  c2:	93 e1       	ldi	r25, 0x13	; 19
  c4:	01 97       	sbiw	r24, 0x01	; 1
  c6:	f1 f7       	brne	.-4      	; 0xc4 <wypisz+0x32>
    _delay_ms(20);  //odczekanie czasu na potwierdzenie wyslania danych
}
  c8:	08 95       	ret

000000ca <czyscLCD>:
void czyscLCD()
{
	posX =0;
  ca:	10 92 b8 00 	sts	0x00B8, r1
  ce:	10 92 b7 00 	sts	0x00B7, r1
	posY=0;
  d2:	10 92 b6 00 	sts	0x00B6, r1
  d6:	10 92 b5 00 	sts	0x00B5, r1
    //LCD_PORT &= ~(_BV(LCD_RS));
    wypisz(0x01,LCD_COMMAND);   //wysylamy polecenie wyczyszczenia
  da:	81 e0       	ldi	r24, 0x01	; 1
  dc:	61 e0       	ldi	r22, 0x01	; 1
  de:	70 e0       	ldi	r23, 0x00	; 0
  e0:	0e 94 49 00 	call	0x92	; 0x92 <wypisz>
  e4:	82 ee       	ldi	r24, 0xE2	; 226
  e6:	94 e0       	ldi	r25, 0x04	; 4
  e8:	01 97       	sbiw	r24, 0x01	; 1
  ea:	f1 f7       	brne	.-4      	; 0xe8 <czyscLCD+0x1e>
    //LCD_PORT |= _BV(LCD_RS);    
    _delay_ms(5);
}
  ec:	08 95       	ret

000000ee <inicjalizacjaLCD>:

void inicjalizacjaLCD()
{
  ee:	0f 93       	push	r16
  f0:	1f 93       	push	r17
    LCD_DDR = (0xF0) | (_BV(LCD_RS)) | (_BV(LCD_EN));   //ustawienie kierunku wyjsciowego dla wszystkich lini
  f2:	83 ef       	ldi	r24, 0xF3	; 243
  f4:	87 bb       	out	0x17, r24	; 23
  f6:	04 ef       	ldi	r16, 0xF4	; 244
  f8:	11 e0       	ldi	r17, 0x01	; 1
  fa:	c8 01       	movw	r24, r16
  fc:	01 97       	sbiw	r24, 0x01	; 1
  fe:	f1 f7       	brne	.-4      	; 0xfc <inicjalizacjaLCD+0xe>
	_delay_ms(2);
    LCD_PORT = 0;   //ustawienie pocz¹tkowego stanu niskiego na wszystkich liniach
 100:	18 ba       	out	0x18, r1	; 24
    LCD_PORT &= ~(_BV(LCD_RS));  //rozpoczêcie wysylania komendy
 102:	c1 98       	cbi	0x18, 1	; 24
    wypisz(0x02,LCD_COMMAND);
 104:	82 e0       	ldi	r24, 0x02	; 2
 106:	61 e0       	ldi	r22, 0x01	; 1
 108:	70 e0       	ldi	r23, 0x00	; 0
 10a:	0e 94 49 00 	call	0x92	; 0x92 <wypisz>
 10e:	c8 01       	movw	r24, r16
 110:	01 97       	sbiw	r24, 0x01	; 1
 112:	f1 f7       	brne	.-4      	; 0x110 <inicjalizacjaLCD+0x22>
	_delay_ms(2);
	//LCD_PORT &= ~(_BV(LCD_RS));
    //LCD_PORT |= _BV(LCD_EN);
	wypisz(0b00101000,LCD_COMMAND);
 114:	88 e2       	ldi	r24, 0x28	; 40
 116:	61 e0       	ldi	r22, 0x01	; 1
 118:	70 e0       	ldi	r23, 0x00	; 0
 11a:	0e 94 49 00 	call	0x92	; 0x92 <wypisz>
 11e:	c8 01       	movw	r24, r16
 120:	01 97       	sbiw	r24, 0x01	; 1
 122:	f1 f7       	brne	.-4      	; 0x120 <inicjalizacjaLCD+0x32>
	_delay_ms(2);
    wypisz(0b00000110,LCD_COMMAND);
 124:	86 e0       	ldi	r24, 0x06	; 6
 126:	61 e0       	ldi	r22, 0x01	; 1
 128:	70 e0       	ldi	r23, 0x00	; 0
 12a:	0e 94 49 00 	call	0x92	; 0x92 <wypisz>
 12e:	c8 01       	movw	r24, r16
 130:	01 97       	sbiw	r24, 0x01	; 1
 132:	f1 f7       	brne	.-4      	; 0x130 <inicjalizacjaLCD+0x42>
	_delay_ms(2);
    wypisz(0b00001100,LCD_COMMAND);
 134:	8c e0       	ldi	r24, 0x0C	; 12
 136:	61 e0       	ldi	r22, 0x01	; 1
 138:	70 e0       	ldi	r23, 0x00	; 0
 13a:	0e 94 49 00 	call	0x92	; 0x92 <wypisz>
 13e:	c8 01       	movw	r24, r16
 140:	01 97       	sbiw	r24, 0x01	; 1
 142:	f1 f7       	brne	.-4      	; 0x140 <inicjalizacjaLCD+0x52>
	_delay_ms(2);
    czyscLCD();
 144:	0e 94 65 00 	call	0xca	; 0xca <czyscLCD>
}
 148:	1f 91       	pop	r17
 14a:	0f 91       	pop	r16
 14c:	08 95       	ret

0000014e <ustawKursor>:

void ustawKursor(unsigned char w, unsigned char h)
{
 14e:	ef 92       	push	r14
 150:	ff 92       	push	r15
 152:	0f 93       	push	r16
 154:	1f 93       	push	r17
 156:	06 2f       	mov	r16, r22
    //LCD_PORT &= ~(_BV(LCD_RS));
    wypisz((w*0x40+h) | 0x80,LCD_COMMAND);
 158:	e8 2e       	mov	r14, r24
 15a:	ff 24       	eor	r15, r15
 15c:	c7 01       	movw	r24, r14
 15e:	26 e0       	ldi	r18, 0x06	; 6
 160:	88 0f       	add	r24, r24
 162:	99 1f       	adc	r25, r25
 164:	2a 95       	dec	r18
 166:	e1 f7       	brne	.-8      	; 0x160 <ustawKursor+0x12>
 168:	86 0f       	add	r24, r22
 16a:	80 68       	ori	r24, 0x80	; 128
 16c:	61 e0       	ldi	r22, 0x01	; 1
 16e:	70 e0       	ldi	r23, 0x00	; 0
 170:	0e 94 49 00 	call	0x92	; 0x92 <wypisz>
    //LCD_PORT |= _BV(LCD_RS);
	posX = w;
 174:	f0 92 b8 00 	sts	0x00B8, r15
 178:	e0 92 b7 00 	sts	0x00B7, r14
	posY = h;
 17c:	10 e0       	ldi	r17, 0x00	; 0
 17e:	10 93 b6 00 	sts	0x00B6, r17
 182:	00 93 b5 00 	sts	0x00B5, r16
 186:	82 ee       	ldi	r24, 0xE2	; 226
 188:	94 e0       	ldi	r25, 0x04	; 4
 18a:	01 97       	sbiw	r24, 0x01	; 1
 18c:	f1 f7       	brne	.-4      	; 0x18a <ustawKursor+0x3c>
    _delay_ms(5);

}
 18e:	1f 91       	pop	r17
 190:	0f 91       	pop	r16
 192:	ff 90       	pop	r15
 194:	ef 90       	pop	r14
 196:	08 95       	ret

00000198 <napisz>:

void napisz(char *tekst, int8_t dlugosc)
{
 198:	0f 93       	push	r16
 19a:	1f 93       	push	r17
 19c:	cf 93       	push	r28
 19e:	df 93       	push	r29
 1a0:	06 2f       	mov	r16, r22
 1a2:	ec 01       	movw	r28, r24
 1a4:	10 e0       	ldi	r17, 0x00	; 0
 1a6:	0c c0       	rjmp	.+24     	; 0x1c0 <napisz+0x28>
    int8_t i=0;
    while (i<dlugosc)   //przejscie po wszystkich znakach tekstu
    {
        if (i==16)  //jezeli trafi na 16 znak (ostatni), to przesun kursor na poczatek 2 linii
 1a8:	10 31       	cpi	r17, 0x10	; 16
 1aa:	21 f4       	brne	.+8      	; 0x1b4 <napisz+0x1c>
        {
            ustawKursor(1,0);
 1ac:	81 e0       	ldi	r24, 0x01	; 1
 1ae:	60 e0       	ldi	r22, 0x00	; 0
 1b0:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
        }
        wypisz(tekst[i],LCD_DATA);   //wypisz i-ty znak tekstu
 1b4:	89 91       	ld	r24, Y+
 1b6:	60 e0       	ldi	r22, 0x00	; 0
 1b8:	70 e0       	ldi	r23, 0x00	; 0
 1ba:	0e 94 49 00 	call	0x92	; 0x92 <wypisz>
        i++;
 1be:	1f 5f       	subi	r17, 0xFF	; 255
}

void napisz(char *tekst, int8_t dlugosc)
{
    int8_t i=0;
    while (i<dlugosc)   //przejscie po wszystkich znakach tekstu
 1c0:	10 17       	cp	r17, r16
 1c2:	94 f3       	brlt	.-28     	; 0x1a8 <napisz+0x10>
            ustawKursor(1,0);
        }
        wypisz(tekst[i],LCD_DATA);   //wypisz i-ty znak tekstu
        i++;
    }
}
 1c4:	df 91       	pop	r29
 1c6:	cf 91       	pop	r28
 1c8:	1f 91       	pop	r17
 1ca:	0f 91       	pop	r16
 1cc:	08 95       	ret

000001ce <czyscLCD_y>:

void czyscLCD_y(unsigned char y){
 1ce:	0f 93       	push	r16
 1d0:	1f 93       	push	r17
 1d2:	08 2f       	mov	r16, r24
	ustawKursor(posX,0);
 1d4:	80 91 b7 00 	lds	r24, 0x00B7
 1d8:	90 91 b8 00 	lds	r25, 0x00B8
 1dc:	60 e0       	ldi	r22, 0x00	; 0
 1de:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
 1e2:	10 e0       	ldi	r17, 0x00	; 0
 1e4:	06 c0       	rjmp	.+12     	; 0x1f2 <czyscLCD_y+0x24>
	for (uint8_t i=0; i<y ; i++)
		wypisz(0x14,LCD_COMMAND);
 1e6:	84 e1       	ldi	r24, 0x14	; 20
 1e8:	61 e0       	ldi	r22, 0x01	; 1
 1ea:	70 e0       	ldi	r23, 0x00	; 0
 1ec:	0e 94 49 00 	call	0x92	; 0x92 <wypisz>
    }
}

void czyscLCD_y(unsigned char y){
	ustawKursor(posX,0);
	for (uint8_t i=0; i<y ; i++)
 1f0:	1f 5f       	subi	r17, 0xFF	; 255
 1f2:	10 17       	cp	r17, r16
 1f4:	c0 f3       	brcs	.-16     	; 0x1e6 <czyscLCD_y+0x18>
 1f6:	06 c0       	rjmp	.+12     	; 0x204 <czyscLCD_y+0x36>
		wypisz(0x14,LCD_COMMAND);
	while(y++ <= 16)
		wypisz(' ',LCD_DATA);
 1f8:	80 e2       	ldi	r24, 0x20	; 32
 1fa:	60 e0       	ldi	r22, 0x00	; 0
 1fc:	70 e0       	ldi	r23, 0x00	; 0
 1fe:	0e 94 49 00 	call	0x92	; 0x92 <wypisz>
 202:	0f 5f       	subi	r16, 0xFF	; 255

void czyscLCD_y(unsigned char y){
	ustawKursor(posX,0);
	for (uint8_t i=0; i<y ; i++)
		wypisz(0x14,LCD_COMMAND);
	while(y++ <= 16)
 204:	01 31       	cpi	r16, 0x11	; 17
 206:	c0 f3       	brcs	.-16     	; 0x1f8 <czyscLCD_y+0x2a>
		wypisz(' ',LCD_DATA);
}
 208:	1f 91       	pop	r17
 20a:	0f 91       	pop	r16
 20c:	08 95       	ret

0000020e <menu1>:
		}; 	
	} 
		
}
void menu1(){
	menuProgram=1;
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	80 93 ae 00 	sts	0x00AE, r24
	liniaMenu=1;
 214:	80 93 ad 00 	sts	0x00AD, r24
	czyscLCD();
 218:	0e 94 65 00 	call	0xca	; 0xca <czyscLCD>
	ustawKursor(0,0);
 21c:	80 e0       	ldi	r24, 0x00	; 0
 21e:	60 e0       	ldi	r22, 0x00	; 0
 220:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
	napisz("1. Przyciski",12);
 224:	80 e6       	ldi	r24, 0x60	; 96
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	6c e0       	ldi	r22, 0x0C	; 12
 22a:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
}
 22e:	08 95       	ret

00000230 <menu2>:
void menu2(){
	switch(liniaMenu){
 230:	80 91 ad 00 	lds	r24, 0x00AD
 234:	81 30       	cpi	r24, 0x01	; 1
 236:	19 f0       	breq	.+6      	; 0x23e <menu2+0xe>
 238:	82 30       	cpi	r24, 0x02	; 2
 23a:	e1 f5       	brne	.+120    	; 0x2b4 <menu2+0x84>
 23c:	1e c0       	rjmp	.+60     	; 0x27a <menu2+0x4a>
	case 1:
		czyscLCD();
 23e:	0e 94 65 00 	call	0xca	; 0xca <czyscLCD>
		ustawKursor(0,0);
 242:	80 e0       	ldi	r24, 0x00	; 0
 244:	60 e0       	ldi	r22, 0x00	; 0
 246:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
		napisz("2.1 Timer",9);
 24a:	8d e6       	ldi	r24, 0x6D	; 109
 24c:	90 e0       	ldi	r25, 0x00	; 0
 24e:	69 e0       	ldi	r22, 0x09	; 9
 250:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
		ustawKursor(1,0);
 254:	81 e0       	ldi	r24, 0x01	; 1
 256:	60 e0       	ldi	r22, 0x00	; 0
 258:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
		napisz("2.2 Stoper",10);
 25c:	87 e7       	ldi	r24, 0x77	; 119
 25e:	90 e0       	ldi	r25, 0x00	; 0
 260:	6a e0       	ldi	r22, 0x0A	; 10
 262:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
		ustawKursor(0,15);
 266:	80 e0       	ldi	r24, 0x00	; 0
 268:	6f e0       	ldi	r22, 0x0F	; 15
 26a:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
		napisz("*",1);
 26e:	82 e8       	ldi	r24, 0x82	; 130
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	61 e0       	ldi	r22, 0x01	; 1
 274:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
 278:	08 95       	ret
	break;
	case 2:
		czyscLCD();
 27a:	0e 94 65 00 	call	0xca	; 0xca <czyscLCD>
		ustawKursor(0,0);
 27e:	80 e0       	ldi	r24, 0x00	; 0
 280:	60 e0       	ldi	r22, 0x00	; 0
 282:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
		napisz("2.1 Timer",9);
 286:	8d e6       	ldi	r24, 0x6D	; 109
 288:	90 e0       	ldi	r25, 0x00	; 0
 28a:	69 e0       	ldi	r22, 0x09	; 9
 28c:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
		ustawKursor(1,0);
 290:	81 e0       	ldi	r24, 0x01	; 1
 292:	60 e0       	ldi	r22, 0x00	; 0
 294:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
		napisz("2.2 Stoper",10);
 298:	87 e7       	ldi	r24, 0x77	; 119
 29a:	90 e0       	ldi	r25, 0x00	; 0
 29c:	6a e0       	ldi	r22, 0x0A	; 10
 29e:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
		ustawKursor(1,15);
 2a2:	81 e0       	ldi	r24, 0x01	; 1
 2a4:	6f e0       	ldi	r22, 0x0F	; 15
 2a6:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
		napisz("*",1);
 2aa:	82 e8       	ldi	r24, 0x82	; 130
 2ac:	90 e0       	ldi	r25, 0x00	; 0
 2ae:	61 e0       	ldi	r22, 0x01	; 1
 2b0:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
 2b4:	08 95       	ret

000002b6 <menu3>:
	default:
		break;
	};
}
void menu3(){
	switch(liniaMenu){
 2b6:	80 91 ad 00 	lds	r24, 0x00AD
 2ba:	81 30       	cpi	r24, 0x01	; 1
 2bc:	19 f0       	breq	.+6      	; 0x2c4 <menu3+0xe>
 2be:	82 30       	cpi	r24, 0x02	; 2
 2c0:	e1 f5       	brne	.+120    	; 0x33a <menu3+0x84>
 2c2:	1e c0       	rjmp	.+60     	; 0x300 <menu3+0x4a>
	case 1:
		czyscLCD();
 2c4:	0e 94 65 00 	call	0xca	; 0xca <czyscLCD>
		ustawKursor(0,0);
 2c8:	80 e0       	ldi	r24, 0x00	; 0
 2ca:	60 e0       	ldi	r22, 0x00	; 0
 2cc:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
		napisz("Menu 1",6);
 2d0:	84 e8       	ldi	r24, 0x84	; 132
 2d2:	90 e0       	ldi	r25, 0x00	; 0
 2d4:	66 e0       	ldi	r22, 0x06	; 6
 2d6:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
		ustawKursor(1,0);
 2da:	81 e0       	ldi	r24, 0x01	; 1
 2dc:	60 e0       	ldi	r22, 0x00	; 0
 2de:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
		napisz("3.1 Diody",9);
 2e2:	8b e8       	ldi	r24, 0x8B	; 139
 2e4:	90 e0       	ldi	r25, 0x00	; 0
 2e6:	69 e0       	ldi	r22, 0x09	; 9
 2e8:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
		ustawKursor(0,15);
 2ec:	80 e0       	ldi	r24, 0x00	; 0
 2ee:	6f e0       	ldi	r22, 0x0F	; 15
 2f0:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
		napisz("*",1);
 2f4:	82 e8       	ldi	r24, 0x82	; 130
 2f6:	90 e0       	ldi	r25, 0x00	; 0
 2f8:	61 e0       	ldi	r22, 0x01	; 1
 2fa:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
 2fe:	08 95       	ret
	break;
	case 2:
		czyscLCD();
 300:	0e 94 65 00 	call	0xca	; 0xca <czyscLCD>
		ustawKursor(0,0);
 304:	80 e0       	ldi	r24, 0x00	; 0
 306:	60 e0       	ldi	r22, 0x00	; 0
 308:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
		napisz("Menu 1",6);
 30c:	84 e8       	ldi	r24, 0x84	; 132
 30e:	90 e0       	ldi	r25, 0x00	; 0
 310:	66 e0       	ldi	r22, 0x06	; 6
 312:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
		ustawKursor(1,0);
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	60 e0       	ldi	r22, 0x00	; 0
 31a:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
		napisz("3.1 Diody",9);
 31e:	8b e8       	ldi	r24, 0x8B	; 139
 320:	90 e0       	ldi	r25, 0x00	; 0
 322:	69 e0       	ldi	r22, 0x09	; 9
 324:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
		ustawKursor(1,15);
 328:	81 e0       	ldi	r24, 0x01	; 1
 32a:	6f e0       	ldi	r22, 0x0F	; 15
 32c:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
		napisz("*",1);
 330:	82 e8       	ldi	r24, 0x82	; 130
 332:	90 e0       	ldi	r25, 0x00	; 0
 334:	61 e0       	ldi	r22, 0x01	; 1
 336:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
 33a:	08 95       	ret

0000033c <menu>:
		//PORTC = liniaMenu;
	}
}

void menu(){
	if (idMenu == 0){
 33c:	80 91 b1 00 	lds	r24, 0x00B1
 340:	88 23       	and	r24, r24
 342:	09 f0       	breq	.+2      	; 0x346 <menu+0xa>
 344:	54 c0       	rjmp	.+168    	; 0x3ee <menu+0xb2>
		menuProgram=1;
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	80 93 ae 00 	sts	0x00AE, r24
		menuPom=0;
 34c:	10 92 b2 00 	sts	0x00B2, r1
		switch(liniaMenu){
 350:	80 91 ad 00 	lds	r24, 0x00AD
 354:	82 30       	cpi	r24, 0x02	; 2
 356:	d9 f0       	breq	.+54     	; 0x38e <menu+0x52>
 358:	83 30       	cpi	r24, 0x03	; 3
 35a:	59 f1       	breq	.+86     	; 0x3b2 <menu+0x76>
 35c:	81 30       	cpi	r24, 0x01	; 1
 35e:	09 f0       	breq	.+2      	; 0x362 <menu+0x26>
 360:	64 c0       	rjmp	.+200    	; 0x42a <menu+0xee>
		case 1:
			czyscLCD();
 362:	0e 94 65 00 	call	0xca	; 0xca <czyscLCD>
			ustawKursor(0,0);
 366:	80 e0       	ldi	r24, 0x00	; 0
 368:	60 e0       	ldi	r22, 0x00	; 0
 36a:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
			napisz("Menu1",5);
 36e:	85 e9       	ldi	r24, 0x95	; 149
 370:	90 e0       	ldi	r25, 0x00	; 0
 372:	65 e0       	ldi	r22, 0x05	; 5
 374:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
			ustawKursor(1,0);
 378:	81 e0       	ldi	r24, 0x01	; 1
 37a:	60 e0       	ldi	r22, 0x00	; 0
 37c:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
			napisz("Menu2",5);
 380:	8b e9       	ldi	r24, 0x9B	; 155
 382:	90 e0       	ldi	r25, 0x00	; 0
 384:	65 e0       	ldi	r22, 0x05	; 5
 386:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
			ustawKursor(0,15);
 38a:	80 e0       	ldi	r24, 0x00	; 0
 38c:	27 c0       	rjmp	.+78     	; 0x3dc <menu+0xa0>
			napisz("*",1);
			break;
		case 2:
			czyscLCD();
 38e:	0e 94 65 00 	call	0xca	; 0xca <czyscLCD>
			ustawKursor(0,0);
 392:	80 e0       	ldi	r24, 0x00	; 0
 394:	60 e0       	ldi	r22, 0x00	; 0
 396:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
			napisz("Menu1",5);
 39a:	85 e9       	ldi	r24, 0x95	; 149
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	65 e0       	ldi	r22, 0x05	; 5
 3a0:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
			ustawKursor(1,0);
 3a4:	81 e0       	ldi	r24, 0x01	; 1
 3a6:	60 e0       	ldi	r22, 0x00	; 0
 3a8:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
			napisz("Menu2",5);
 3ac:	8b e9       	ldi	r24, 0x9B	; 155
 3ae:	90 e0       	ldi	r25, 0x00	; 0
 3b0:	11 c0       	rjmp	.+34     	; 0x3d4 <menu+0x98>
			ustawKursor(1,15);
			napisz("*",1);
			break;
		case 3:
			czyscLCD();
 3b2:	0e 94 65 00 	call	0xca	; 0xca <czyscLCD>
			ustawKursor(0,0);
 3b6:	80 e0       	ldi	r24, 0x00	; 0
 3b8:	60 e0       	ldi	r22, 0x00	; 0
 3ba:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
			napisz("Menu2",5);
 3be:	8b e9       	ldi	r24, 0x9B	; 155
 3c0:	90 e0       	ldi	r25, 0x00	; 0
 3c2:	65 e0       	ldi	r22, 0x05	; 5
 3c4:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
			ustawKursor(1,0);
 3c8:	81 e0       	ldi	r24, 0x01	; 1
 3ca:	60 e0       	ldi	r22, 0x00	; 0
 3cc:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
			napisz("Menu3",5);
 3d0:	81 ea       	ldi	r24, 0xA1	; 161
 3d2:	90 e0       	ldi	r25, 0x00	; 0
 3d4:	65 e0       	ldi	r22, 0x05	; 5
 3d6:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
			ustawKursor(1,15);
 3da:	81 e0       	ldi	r24, 0x01	; 1
 3dc:	6f e0       	ldi	r22, 0x0F	; 15
 3de:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
			napisz("*",1);
 3e2:	82 e8       	ldi	r24, 0x82	; 130
 3e4:	90 e0       	ldi	r25, 0x00	; 0
 3e6:	61 e0       	ldi	r22, 0x01	; 1
 3e8:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
 3ec:	08 95       	ret
			break;
		default:
			break;
		}; 
	} else if(idMenu==1 && menuProgram==1){
 3ee:	81 30       	cpi	r24, 0x01	; 1
 3f0:	e1 f4       	brne	.+56     	; 0x42a <menu+0xee>
 3f2:	90 91 ae 00 	lds	r25, 0x00AE
 3f6:	91 30       	cpi	r25, 0x01	; 1
 3f8:	c1 f4       	brne	.+48     	; 0x42a <menu+0xee>
		switch(liniaMenu){
 3fa:	80 91 ad 00 	lds	r24, 0x00AD
 3fe:	82 30       	cpi	r24, 0x02	; 2
 400:	39 f0       	breq	.+14     	; 0x410 <menu+0xd4>
 402:	83 30       	cpi	r24, 0x03	; 3
 404:	61 f0       	breq	.+24     	; 0x41e <menu+0xe2>
 406:	81 30       	cpi	r24, 0x01	; 1
 408:	81 f4       	brne	.+32     	; 0x42a <menu+0xee>
		case 1:
			menu1();
 40a:	0e 94 07 01 	call	0x20e	; 0x20e <menu1>
 40e:	08 95       	ret
			break;
		case 2:
			menuProgram=2;
 410:	80 93 ae 00 	sts	0x00AE, r24
			liniaMenu=1;
 414:	90 93 ad 00 	sts	0x00AD, r25
			menu2();
 418:	0e 94 18 01 	call	0x230	; 0x230 <menu2>
 41c:	08 95       	ret
			break;
		case 3:
			menuProgram=3;
 41e:	80 93 ae 00 	sts	0x00AE, r24
			liniaMenu=1;
 422:	90 93 ad 00 	sts	0x00AD, r25
			menu3();
 426:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <menu3>
 42a:	08 95       	ret

0000042c <diody>:
		break;
	};
}

void diody(){ //zad3 lab1
	PORTC=0b10000000; // ustawienie stanu bitu 7
 42c:	80 e8       	ldi	r24, 0x80	; 128
 42e:	85 bb       	out	0x15, r24	; 21
 430:	47 e0       	ldi	r20, 0x07	; 7
 432:	50 e0       	ldi	r21, 0x00	; 0
 434:	a9 e1       	ldi	r26, 0x19	; 25
 436:	b0 e0       	ldi	r27, 0x00	; 0
    for (int i = 7; i >= 0 ; i--){
       _delay_ms(300);
       PORTC^=_BV(i-1); ;
 438:	61 e0       	ldi	r22, 0x01	; 1
 43a:	70 e0       	ldi	r23, 0x00	; 0
 43c:	15 c0       	rjmp	.+42     	; 0x468 <diody+0x3c>
 43e:	fd 01       	movw	r30, r26
 440:	31 97       	sbiw	r30, 0x01	; 1
 442:	f1 f7       	brne	.-4      	; 0x440 <diody+0x14>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
 444:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
 446:	d9 f7       	brne	.-10     	; 0x43e <diody+0x12>
 448:	25 b3       	in	r18, 0x15	; 21
 44a:	41 50       	subi	r20, 0x01	; 1
 44c:	50 40       	sbci	r21, 0x00	; 0
 44e:	cb 01       	movw	r24, r22
 450:	04 2e       	mov	r0, r20
 452:	02 c0       	rjmp	.+4      	; 0x458 <diody+0x2c>
 454:	88 0f       	add	r24, r24
 456:	99 1f       	adc	r25, r25
 458:	0a 94       	dec	r0
 45a:	e2 f7       	brpl	.-8      	; 0x454 <diody+0x28>
 45c:	28 27       	eor	r18, r24
 45e:	25 bb       	out	0x15, r18	; 21
	};
}

void diody(){ //zad3 lab1
	PORTC=0b10000000; // ustawienie stanu bitu 7
    for (int i = 7; i >= 0 ; i--){
 460:	8f ef       	ldi	r24, 0xFF	; 255
 462:	4f 3f       	cpi	r20, 0xFF	; 255
 464:	58 07       	cpc	r21, r24
 466:	19 f0       	breq	.+6      	; 0x46e <diody+0x42>
 468:	88 eb       	ldi	r24, 0xB8	; 184
 46a:	9b e0       	ldi	r25, 0x0B	; 11
 46c:	e8 cf       	rjmp	.-48     	; 0x43e <diody+0x12>
 46e:	08 95       	ret

00000470 <klawiatura>:
}
/*
ISR(TIMER2_COMP_vect) { // przerwanie timer2
}
*/
void klawiatura(){
 470:	ef 92       	push	r14
 472:	ff 92       	push	r15
 474:	1f 93       	push	r17
 476:	cf 93       	push	r28
 478:	df 93       	push	r29
 47a:	c4 e0       	ldi	r28, 0x04	; 4
 47c:	d0 e0       	ldi	r29, 0x00	; 0
	uint8_t i,wyjscie = 0x00;
	for (i=4 ; i<8 ; i++){
	    PORTA = ~_BV(i); // u¿ycie makra
 47e:	31 e0       	ldi	r19, 0x01	; 1
 480:	e3 2e       	mov	r14, r19
 482:	f1 2c       	mov	r15, r1
 484:	c7 01       	movw	r24, r14
 486:	0c 2e       	mov	r0, r28
 488:	02 c0       	rjmp	.+4      	; 0x48e <klawiatura+0x1e>
 48a:	88 0f       	add	r24, r24
 48c:	99 1f       	adc	r25, r25
 48e:	0a 94       	dec	r0
 490:	e2 f7       	brpl	.-8      	; 0x48a <klawiatura+0x1a>
 492:	80 95       	com	r24
 494:	8b bb       	out	0x1b, r24	; 27
	    stan = PINA & 0x0F; // odczytanie stanu PINA i maskowanie
 496:	89 b3       	in	r24, 0x19	; 25
 498:	8f 70       	andi	r24, 0x0F	; 15
 49a:	80 93 b0 00 	sts	0x00B0, r24
		switch(stan) { // dopasowanie stanu PINA do dzia³ania programu
 49e:	80 91 b0 00 	lds	r24, 0x00B0
 4a2:	8b 30       	cpi	r24, 0x0B	; 11
 4a4:	09 f4       	brne	.+2      	; 0x4a8 <klawiatura+0x38>
 4a6:	7f c0       	rjmp	.+254    	; 0x5a6 <klawiatura+0x136>
 4a8:	8c 30       	cpi	r24, 0x0C	; 12
 4aa:	20 f4       	brcc	.+8      	; 0x4b4 <klawiatura+0x44>
 4ac:	87 30       	cpi	r24, 0x07	; 7
 4ae:	09 f0       	breq	.+2      	; 0x4b2 <klawiatura+0x42>
 4b0:	ed c0       	rjmp	.+474    	; 0x68c <klawiatura+0x21c>
 4b2:	af c0       	rjmp	.+350    	; 0x612 <klawiatura+0x1a2>
 4b4:	8d 30       	cpi	r24, 0x0D	; 13
 4b6:	b9 f1       	breq	.+110    	; 0x526 <klawiatura+0xb6>
 4b8:	8e 30       	cpi	r24, 0x0E	; 14
 4ba:	09 f0       	breq	.+2      	; 0x4be <klawiatura+0x4e>
 4bc:	e7 c0       	rjmp	.+462    	; 0x68c <klawiatura+0x21c>
		   case 0b00001111: 
		        break;
		   case 0b00001110: // up
		   		if (i==7) {
 4be:	c7 30       	cpi	r28, 0x07	; 7
 4c0:	01 f5       	brne	.+64     	; 0x502 <klawiatura+0x92>
					if(liniaMenu!=1 && idMenu==0){
 4c2:	90 91 ad 00 	lds	r25, 0x00AD
 4c6:	91 30       	cpi	r25, 0x01	; 1
 4c8:	31 f0       	breq	.+12     	; 0x4d6 <klawiatura+0x66>
 4ca:	80 91 b1 00 	lds	r24, 0x00B1
 4ce:	88 23       	and	r24, r24
 4d0:	11 f4       	brne	.+4      	; 0x4d6 <klawiatura+0x66>
		            	liniaMenu--;
 4d2:	91 50       	subi	r25, 0x01	; 1
 4d4:	33 c0       	rjmp	.+102    	; 0x53c <klawiatura+0xcc>
						menu();
					} else if(idMenu==1 && menuProgram==2 && liniaMenu!=1){
 4d6:	80 91 b1 00 	lds	r24, 0x00B1
 4da:	81 30       	cpi	r24, 0x01	; 1
 4dc:	09 f0       	breq	.+2      	; 0x4e0 <klawiatura+0x70>
 4de:	d6 c0       	rjmp	.+428    	; 0x68c <klawiatura+0x21c>
 4e0:	80 91 ae 00 	lds	r24, 0x00AE
 4e4:	82 30       	cpi	r24, 0x02	; 2
 4e6:	29 f4       	brne	.+10     	; 0x4f2 <klawiatura+0x82>
 4e8:	91 30       	cpi	r25, 0x01	; 1
 4ea:	09 f4       	brne	.+2      	; 0x4ee <klawiatura+0x7e>
 4ec:	cf c0       	rjmp	.+414    	; 0x68c <klawiatura+0x21c>
						liniaMenu--;
 4ee:	91 50       	subi	r25, 0x01	; 1
 4f0:	37 c0       	rjmp	.+110    	; 0x560 <klawiatura+0xf0>
						menu2();
					} else if(idMenu==1 && menuProgram==3 && liniaMenu!=1){
 4f2:	83 30       	cpi	r24, 0x03	; 3
 4f4:	09 f0       	breq	.+2      	; 0x4f8 <klawiatura+0x88>
 4f6:	ca c0       	rjmp	.+404    	; 0x68c <klawiatura+0x21c>
 4f8:	91 30       	cpi	r25, 0x01	; 1
 4fa:	09 f4       	brne	.+2      	; 0x4fe <klawiatura+0x8e>
 4fc:	c7 c0       	rjmp	.+398    	; 0x68c <klawiatura+0x21c>
						liniaMenu--;
 4fe:	91 50       	subi	r25, 0x01	; 1
 500:	3b c0       	rjmp	.+118    	; 0x578 <klawiatura+0x108>
						menu3();	
					}
				} else if (i==4 && wykryjPrzycisk==1){
 502:	c4 30       	cpi	r28, 0x04	; 4
 504:	09 f0       	breq	.+2      	; 0x508 <klawiatura+0x98>
 506:	c2 c0       	rjmp	.+388    	; 0x68c <klawiatura+0x21c>
 508:	80 91 b4 00 	lds	r24, 0x00B4
 50c:	81 30       	cpi	r24, 0x01	; 1
 50e:	09 f0       	breq	.+2      	; 0x512 <klawiatura+0xa2>
 510:	bd c0       	rjmp	.+378    	; 0x68c <klawiatura+0x21c>
					wyjscie=0x01;
					czyscLCD_y(15);
 512:	8f e0       	ldi	r24, 0x0F	; 15
 514:	0e 94 e7 00 	call	0x1ce	; 0x1ce <czyscLCD_y>
					ustawKursor(0,15);
 518:	80 e0       	ldi	r24, 0x00	; 0
 51a:	6f e0       	ldi	r22, 0x0F	; 15
 51c:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
					napisz("1",1);
 520:	87 ea       	ldi	r24, 0xA7	; 167
 522:	90 e0       	ldi	r25, 0x00	; 0
 524:	72 c0       	rjmp	.+228    	; 0x60a <klawiatura+0x19a>
				} 
		        break;
		   case 0b00001101: // down
		   		if (i==7) {
 526:	c7 30       	cpi	r28, 0x07	; 7
 528:	61 f5       	brne	.+88     	; 0x582 <klawiatura+0x112>
					if(liniaMenu!=3 && idMenu==0){
 52a:	90 91 ad 00 	lds	r25, 0x00AD
 52e:	93 30       	cpi	r25, 0x03	; 3
 530:	51 f0       	breq	.+20     	; 0x546 <klawiatura+0xd6>
 532:	80 91 b1 00 	lds	r24, 0x00B1
 536:	88 23       	and	r24, r24
 538:	31 f4       	brne	.+12     	; 0x546 <klawiatura+0xd6>
		            	liniaMenu++;
 53a:	9f 5f       	subi	r25, 0xFF	; 255
 53c:	90 93 ad 00 	sts	0x00AD, r25
						menu();
 540:	0e 94 9e 01 	call	0x33c	; 0x33c <menu>
 544:	a3 c0       	rjmp	.+326    	; 0x68c <klawiatura+0x21c>
					} else if(idMenu==1 && menuProgram==2 && liniaMenu!=2){
 546:	80 91 b1 00 	lds	r24, 0x00B1
 54a:	81 30       	cpi	r24, 0x01	; 1
 54c:	09 f0       	breq	.+2      	; 0x550 <klawiatura+0xe0>
 54e:	9e c0       	rjmp	.+316    	; 0x68c <klawiatura+0x21c>
 550:	80 91 ae 00 	lds	r24, 0x00AE
 554:	82 30       	cpi	r24, 0x02	; 2
 556:	49 f4       	brne	.+18     	; 0x56a <klawiatura+0xfa>
 558:	92 30       	cpi	r25, 0x02	; 2
 55a:	09 f4       	brne	.+2      	; 0x55e <klawiatura+0xee>
 55c:	97 c0       	rjmp	.+302    	; 0x68c <klawiatura+0x21c>
						liniaMenu++;
 55e:	9f 5f       	subi	r25, 0xFF	; 255
 560:	90 93 ad 00 	sts	0x00AD, r25
						menu2();
 564:	0e 94 18 01 	call	0x230	; 0x230 <menu2>
 568:	91 c0       	rjmp	.+290    	; 0x68c <klawiatura+0x21c>
						
					} else if(idMenu==1 && menuProgram==3 && liniaMenu!=2){
 56a:	83 30       	cpi	r24, 0x03	; 3
 56c:	09 f0       	breq	.+2      	; 0x570 <klawiatura+0x100>
 56e:	8e c0       	rjmp	.+284    	; 0x68c <klawiatura+0x21c>
 570:	92 30       	cpi	r25, 0x02	; 2
 572:	09 f4       	brne	.+2      	; 0x576 <klawiatura+0x106>
 574:	8b c0       	rjmp	.+278    	; 0x68c <klawiatura+0x21c>
						liniaMenu++;
 576:	9f 5f       	subi	r25, 0xFF	; 255
 578:	90 93 ad 00 	sts	0x00AD, r25
						menu3();
 57c:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <menu3>
 580:	85 c0       	rjmp	.+266    	; 0x68c <klawiatura+0x21c>
						
					}
				} else if (i==4 && wykryjPrzycisk==1){
 582:	c4 30       	cpi	r28, 0x04	; 4
 584:	09 f0       	breq	.+2      	; 0x588 <klawiatura+0x118>
 586:	82 c0       	rjmp	.+260    	; 0x68c <klawiatura+0x21c>
 588:	80 91 b4 00 	lds	r24, 0x00B4
 58c:	81 30       	cpi	r24, 0x01	; 1
 58e:	09 f0       	breq	.+2      	; 0x592 <klawiatura+0x122>
 590:	7d c0       	rjmp	.+250    	; 0x68c <klawiatura+0x21c>
					wyjscie=0x02;
					czyscLCD_y(15);
 592:	8f e0       	ldi	r24, 0x0F	; 15
 594:	0e 94 e7 00 	call	0x1ce	; 0x1ce <czyscLCD_y>
					ustawKursor(0,15);
 598:	80 e0       	ldi	r24, 0x00	; 0
 59a:	6f e0       	ldi	r22, 0x0F	; 15
 59c:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
					napisz("4",1);
 5a0:	89 ea       	ldi	r24, 0xA9	; 169
 5a2:	90 e0       	ldi	r25, 0x00	; 0
 5a4:	32 c0       	rjmp	.+100    	; 0x60a <klawiatura+0x19a>
				}
		        break;
		   case 0b00001011: // clear(escape) 
				if (i==7) {
 5a6:	c7 30       	cpi	r28, 0x07	; 7
 5a8:	f9 f4       	brne	.+62     	; 0x5e8 <klawiatura+0x178>
					wykryjPrzycisk=0;
 5aa:	10 92 b4 00 	sts	0x00B4, r1
					progTrwa=0;
 5ae:	10 92 b3 00 	sts	0x00B3, r1
					//menuPom=0;
					if(menuProgram==2){
 5b2:	90 91 ae 00 	lds	r25, 0x00AE
 5b6:	92 30       	cpi	r25, 0x02	; 2
 5b8:	11 f0       	breq	.+4      	; 0x5be <klawiatura+0x14e>
						menuProgram=1;
						liniaMenu=2;
					} else if(menuProgram==3){
 5ba:	93 30       	cpi	r25, 0x03	; 3
 5bc:	29 f4       	brne	.+10     	; 0x5c8 <klawiatura+0x158>
						menuProgram=1;
 5be:	81 e0       	ldi	r24, 0x01	; 1
 5c0:	80 93 ae 00 	sts	0x00AE, r24
						liniaMenu=3;
 5c4:	90 93 ad 00 	sts	0x00AD, r25
					}						
					if(idMenu!=0)
 5c8:	80 91 b1 00 	lds	r24, 0x00B1
 5cc:	88 23       	and	r24, r24
 5ce:	19 f0       	breq	.+6      	; 0x5d6 <klawiatura+0x166>
			   			idMenu--;
 5d0:	81 50       	subi	r24, 0x01	; 1
 5d2:	80 93 b1 00 	sts	0x00B1, r24
					if (menuProgram==1)
 5d6:	80 91 ae 00 	lds	r24, 0x00AE
 5da:	81 30       	cpi	r24, 0x01	; 1
 5dc:	09 f4       	brne	.+2      	; 0x5e0 <klawiatura+0x170>
 5de:	b0 cf       	rjmp	.-160    	; 0x540 <klawiatura+0xd0>
						menu();
					else if (menuProgram==2)
 5e0:	82 30       	cpi	r24, 0x02	; 2
 5e2:	09 f0       	breq	.+2      	; 0x5e6 <klawiatura+0x176>
 5e4:	53 c0       	rjmp	.+166    	; 0x68c <klawiatura+0x21c>
 5e6:	be cf       	rjmp	.-132    	; 0x564 <klawiatura+0xf4>
						menu2();
				} else if (i==4 && wykryjPrzycisk==1){
 5e8:	c4 30       	cpi	r28, 0x04	; 4
 5ea:	09 f0       	breq	.+2      	; 0x5ee <klawiatura+0x17e>
 5ec:	4f c0       	rjmp	.+158    	; 0x68c <klawiatura+0x21c>
 5ee:	80 91 b4 00 	lds	r24, 0x00B4
 5f2:	81 30       	cpi	r24, 0x01	; 1
 5f4:	09 f0       	breq	.+2      	; 0x5f8 <klawiatura+0x188>
 5f6:	4a c0       	rjmp	.+148    	; 0x68c <klawiatura+0x21c>
					wyjscie=0x04;
					czyscLCD_y(15);
 5f8:	8f e0       	ldi	r24, 0x0F	; 15
 5fa:	0e 94 e7 00 	call	0x1ce	; 0x1ce <czyscLCD_y>
					ustawKursor(0,15);
 5fe:	80 e0       	ldi	r24, 0x00	; 0
 600:	6f e0       	ldi	r22, 0x0F	; 15
 602:	0e 94 a7 00 	call	0x14e	; 0x14e <ustawKursor>
					napisz("7",1);
 606:	8b ea       	ldi	r24, 0xAB	; 171
 608:	90 e0       	ldi	r25, 0x00	; 0
 60a:	61 e0       	ldi	r22, 0x01	; 1
 60c:	0e 94 cc 00 	call	0x198	; 0x198 <napisz>
 610:	3d c0       	rjmp	.+122    	; 0x68c <klawiatura+0x21c>
				}
		        break;
		   case 0b00000111: // enter
		   		if (i==7) {
 612:	c7 30       	cpi	r28, 0x07	; 7
 614:	d9 f5       	brne	.+118    	; 0x68c <klawiatura+0x21c>
					if (idMenu!=2){
 616:	80 91 b1 00 	lds	r24, 0x00B1
 61a:	82 30       	cpi	r24, 0x02	; 2
 61c:	19 f0       	breq	.+6      	; 0x624 <klawiatura+0x1b4>
			   			idMenu++;
 61e:	8f 5f       	subi	r24, 0xFF	; 255
 620:	80 93 b1 00 	sts	0x00B1, r24
					}
					if (menuProgram==1)
 624:	80 91 ae 00 	lds	r24, 0x00AE
 628:	81 30       	cpi	r24, 0x01	; 1
 62a:	19 f4       	brne	.+6      	; 0x632 <klawiatura+0x1c2>
						menu();
 62c:	0e 94 9e 01 	call	0x33c	; 0x33c <menu>
 630:	09 c0       	rjmp	.+18     	; 0x644 <klawiatura+0x1d4>
					else if (menuProgram==2)
 632:	82 30       	cpi	r24, 0x02	; 2
 634:	19 f4       	brne	.+6      	; 0x63c <klawiatura+0x1cc>
						menu2();
 636:	0e 94 18 01 	call	0x230	; 0x230 <menu2>
 63a:	04 c0       	rjmp	.+8      	; 0x644 <klawiatura+0x1d4>
					else if (menuProgram==3)
 63c:	83 30       	cpi	r24, 0x03	; 3
 63e:	11 f4       	brne	.+4      	; 0x644 <klawiatura+0x1d4>
						menu3();
 640:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <menu3>
					if (menuProgram==3 && idMenu==2 && liniaMenu==1){
 644:	80 91 ae 00 	lds	r24, 0x00AE
 648:	83 30       	cpi	r24, 0x03	; 3
 64a:	71 f4       	brne	.+28     	; 0x668 <klawiatura+0x1f8>
 64c:	80 91 b1 00 	lds	r24, 0x00B1
 650:	82 30       	cpi	r24, 0x02	; 2
 652:	51 f4       	brne	.+20     	; 0x668 <klawiatura+0x1f8>
 654:	10 91 ad 00 	lds	r17, 0x00AD
 658:	11 30       	cpi	r17, 0x01	; 1
 65a:	31 f4       	brne	.+12     	; 0x668 <klawiatura+0x1f8>
						menuProgram=1;
 65c:	10 93 ae 00 	sts	0x00AE, r17
						menu1();
 660:	0e 94 07 01 	call	0x20e	; 0x20e <menu1>
						idMenu=1;	
 664:	10 93 b1 00 	sts	0x00B1, r17
					}
					if (menuProgram==3 && idMenu==2 && liniaMenu==2){
 668:	80 91 ae 00 	lds	r24, 0x00AE
 66c:	83 30       	cpi	r24, 0x03	; 3
 66e:	71 f4       	brne	.+28     	; 0x68c <klawiatura+0x21c>
 670:	80 91 b1 00 	lds	r24, 0x00B1
 674:	82 30       	cpi	r24, 0x02	; 2
 676:	51 f4       	brne	.+20     	; 0x68c <klawiatura+0x21c>
 678:	80 91 ad 00 	lds	r24, 0x00AD
 67c:	82 30       	cpi	r24, 0x02	; 2
 67e:	31 f4       	brne	.+12     	; 0x68c <klawiatura+0x21c>
						idMenu=1;
 680:	81 e0       	ldi	r24, 0x01	; 1
 682:	80 93 b1 00 	sts	0x00B1, r24
						diody();
 686:	0e 94 16 02 	call	0x42c	; 0x42c <diody>
						PORTC=0x00;	
 68a:	15 ba       	out	0x15, r1	; 21
 68c:	21 96       	adiw	r28, 0x01	; 1
ISR(TIMER2_COMP_vect) { // przerwanie timer2
}
*/
void klawiatura(){
	uint8_t i,wyjscie = 0x00;
	for (i=4 ; i<8 ; i++){
 68e:	c8 30       	cpi	r28, 0x08	; 8
 690:	d1 05       	cpc	r29, r1
 692:	09 f0       	breq	.+2      	; 0x696 <klawiatura+0x226>
 694:	f7 ce       	rjmp	.-530    	; 0x484 <klawiatura+0x14>
		   default:
		        break;	
		};	
		//PORTC = liniaMenu;
	}
}
 696:	df 91       	pop	r29
 698:	cf 91       	pop	r28
 69a:	1f 91       	pop	r17
 69c:	ff 90       	pop	r15
 69e:	ef 90       	pop	r14
 6a0:	08 95       	ret

000006a2 <__vector_10>:
		wypisz(0x14,LCD_COMMAND);
	while(y++ <= 16)
		wypisz(' ',LCD_DATA);
}
 
ISR(TIMER0_COMP_vect) { // przerwanie timer0
 6a2:	1f 92       	push	r1
 6a4:	0f 92       	push	r0
 6a6:	0f b6       	in	r0, 0x3f	; 63
 6a8:	0f 92       	push	r0
 6aa:	11 24       	eor	r1, r1
 6ac:	2f 93       	push	r18
 6ae:	3f 93       	push	r19
 6b0:	4f 93       	push	r20
 6b2:	5f 93       	push	r21
 6b4:	6f 93       	push	r22
 6b6:	7f 93       	push	r23
 6b8:	8f 93       	push	r24
 6ba:	9f 93       	push	r25
 6bc:	af 93       	push	r26
 6be:	bf 93       	push	r27
 6c0:	ef 93       	push	r30
 6c2:	ff 93       	push	r31
	klawiatura();   
 6c4:	0e 94 38 02 	call	0x470	; 0x470 <klawiatura>
}
 6c8:	ff 91       	pop	r31
 6ca:	ef 91       	pop	r30
 6cc:	bf 91       	pop	r27
 6ce:	af 91       	pop	r26
 6d0:	9f 91       	pop	r25
 6d2:	8f 91       	pop	r24
 6d4:	7f 91       	pop	r23
 6d6:	6f 91       	pop	r22
 6d8:	5f 91       	pop	r21
 6da:	4f 91       	pop	r20
 6dc:	3f 91       	pop	r19
 6de:	2f 91       	pop	r18
 6e0:	0f 90       	pop	r0
 6e2:	0f be       	out	0x3f, r0	; 63
 6e4:	0f 90       	pop	r0
 6e6:	1f 90       	pop	r1
 6e8:	18 95       	reti

000006ea <main>:
    }
}

int main(void)
{
	DDRA = 0xF0; // ustawienie czêci portu A w stan wejcia
 6ea:	80 ef       	ldi	r24, 0xF0	; 240
 6ec:	8a bb       	out	0x1a, r24	; 26
    PORTA = 0x0F; // podci¹gniêcie portu A
 6ee:	8f e0       	ldi	r24, 0x0F	; 15
 6f0:	8b bb       	out	0x1b, r24	; 27
    DDRC = 0xFF; // ustawienie 5 bitów portu C w stan wyjcia
 6f2:	8f ef       	ldi	r24, 0xFF	; 255
 6f4:	84 bb       	out	0x14, r24	; 20
    PORTC = 0x00; // stan pocz¹tkowy portu C
 6f6:	15 ba       	out	0x15, r1	; 21
	// timer0
    TCCR0 |= 1 << WGM01 | 1 << CS00 | 1 << CS02; // tryb CTC i preskaler 1024
 6f8:	83 b7       	in	r24, 0x33	; 51
 6fa:	8d 60       	ori	r24, 0x0D	; 13
 6fc:	83 bf       	out	0x33, r24	; 51
    TIMSK |= 1 << OCIE0;// | 1<<OCIE2; // flaga przepe³nienia
 6fe:	89 b7       	in	r24, 0x39	; 57
 700:	82 60       	ori	r24, 0x02	; 2
 702:	89 bf       	out	0x39, r24	; 57
    OCR0 = 10; // czas 5ms 
 704:	8a e0       	ldi	r24, 0x0A	; 10
 706:	8c bf       	out	0x3c, r24	; 60
    TCNT0 = 0; // wartoæ startowa timera
 708:	12 be       	out	0x32, r1	; 50
	TIMSK |= 1<<OCIE2;
	TCCR2 |= 1 << WGM01 | 1 << CS00 | 1 << CS02;
	OCR2=10;
	TCNT2=0;
	*/
    sei();
 70a:	78 94       	sei
	inicjalizacjaLCD();
 70c:	0e 94 77 00 	call	0xee	; 0xee <inicjalizacjaLCD>
	//char tekst1[]={'M','a','k','s','y','m','i','u','k',' ','K','.'};
	//char tekst2[]={'P','r','z','y','c','i','s','k',' ','n','r',':'};
	
	czyscLCD();
 710:	0e 94 65 00 	call	0xca	; 0xca <czyscLCD>
 714:	ff cf       	rjmp	.-2      	; 0x714 <main+0x2a>

00000716 <_exit>:
 716:	f8 94       	cli

00000718 <__stop_program>:
 718:	ff cf       	rjmp	.-2      	; 0x718 <__stop_program>
